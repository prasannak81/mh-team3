version: '3.6'
services:
  api: &api
    image: quickpickup
    build:
      context: .
      target: ${DOCKER_BUILD_API_TARGET:-final}
    # TODO: Refactor to split development mode from production
    command: flask run --host 0.0.0.0 --port 8080
    environment:
      FLASK_APP: quickpickup.api
      MONGO_URI: 'mongodb://mongo:27017'
    links:
      - mongo
    ports:  # Public ports for direct debugging
      - 8080:8080
  nginx:
    image: quickpickup:nginx
    build:
      context: ./ui
    links:
      - api
    ports:
      - 80:80
      # No SSL support (yet)
      # - 443:443
    # TODO: Volume mount in React build for dev support?
    command: [nginx-debug, '-g', 'daemon off;']
  mongo:
    image: mongo
    ports:  # Public ports for direct debugging
      - 27017:27017
    logging:
      driver: none
    # TODO: Volume mounts for "production" data so we don't lose anything on
    # restarts
  chatbot:
    image: webex_teams_chatbot:0.3.1
    build:
      context: .
      dockerfile: Dockerfile.chat
    # Use .env file instead
    # env_file: chat.env
    environment:
      ROOM_NAME: ${ROOM_NAME:-test}
      WEBEX_BOT_USERNAME: ${WEBEX_BOT_USERNAME:-test}
      WEBEX_TEAMS_ACCESS_TOKEN: ${WEBEX_TEAMS_ACCESS_TOKEN:-test}
    ports:
      - 5030:5030

  mvsensor:
    # Allow image override since we don't have this locally
    image: ${MV_SENSOR_IMAGE:-quickpickup-mvsensor-mh2020:v1.1}
    links:
      - chatbot

  test:
    <<: *api
    image: quickpickup:test
    build:
      context: .
      target: test
    environment:
      MONGO_URI: 'mongodb://mongo:27017'
      INTEGRATION_TEST: 'True'
    ports: []
    command: pytest -vv --color=yes ./test
